# Generated by Django 2.2.11 on 2021-01-08 13:43

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ourproperty.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EstateProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('estate_type', models.CharField(max_length=200)),
                ('monthly_charge', models.IntegerField()),
                ('security_charge', models.IntegerField()),
                ('maintainence_charge', models.IntegerField()),
                ('property_posted_date', models.DateField(auto_now_add=True, null=True)),
                ('payment_status', models.BooleanField(default=False)),
                ('user_request', models.CharField(default='pending', max_length=20)),
                ('dealer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dealer_property', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('mobile', models.IntegerField()),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='PropertyPhoto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(max_length=255, upload_to=ourproperty.models.get_photo_path)),
                ('photo_create', models.DateField(auto_now_add=True)),
                ('photo_update', models.DateField(auto_now=True)),
                ('estate_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_photos', to='ourproperty.EstateProperty')),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('furnished', 'Furnished'), ('semifurnished', 'Semifurnished'), ('unfurnished', 'Unfurnished')], max_length=50)),
                ('bedroom', models.IntegerField()),
                ('bathroom', models.IntegerField()),
                ('balcony', models.IntegerField()),
                ('floor', models.IntegerField()),
                ('area', models.IntegerField()),
                ('estate_property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='property_feature', to='ourproperty.EstateProperty')),
            ],
        ),
        migrations.AddField(
            model_name='estateproperty',
            name='property_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ourproperty.PropertyUser'),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=20)),
                ('pincode', models.IntegerField()),
                ('landmark', models.CharField(blank=True, max_length=100)),
                ('estate_property', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='property_address', to='ourproperty.EstateProperty')),
            ],
        ),
    ]
